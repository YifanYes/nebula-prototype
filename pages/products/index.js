// We'll list all products
// export getStaticProps to server-side render page at build time
// Incremental Static Regeneration: adding revalidate key with a timeout value in seconds
// Regenerates the page when it is requested

import { ProductCard } from '../../components/card/card'
import db from '../../utils/db';
import { useEffect, useState } from "react";

const Products = (props) => {
  const [productCards, setProductCards] = useState([]);
  const { productsData } = props;

  useEffect(() => {
    if (productsData) {
      setProductCards(
        productsData.map((card, index) => {
          return <ProductCard key={`product_${index}`} values={card} />
        })
      );
    }
  }, [productsData]);

  return (
    <div className={'flex flex-wrap gap-12 justify-center my-16'}>
      {productCards ? productCards : 'No rulo'}
    </div>
  );
}


export const getStaticProps = async () => {
  const products = await db.collection('products').get();
  const productsData = products.docs.map(product => ({
    id: product.id,
    ...product.data()
  }));

  return {
    props: { productsData },
    revalidate: 10
  }
}


Products.title = 'Productos';
Products.description = 'Generated by create next app';
Products.header = 'Listado de Productos';

export default Products;
